% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/field_trial_error.R
\name{field_trial_error}
\alias{field_trial_error}
\title{Simulate plot-level error in a multi-environment field trial}
\usage{
field_trial_error(
  n_envs,
  n_traits,
  n_reps,
  n_cols,
  n_rows,
  plot_length,
  plot_width,
  rep_dir = "column",
  var_R,
  cor_R = NULL,
  R_cor_R = NULL,
  spatial_model = "bivariate",
  prop_spatial = 0.5,
  complexity = 12,
  col_cor,
  row_cor,
  effects = FALSE
)
}
\arguments{
\item{n_envs}{Number of environments to be simulated (same as used in
\code{compsym_asr_input} or \code{unstr_asr_output}, where applicable).}

\item{n_traits}{Number of traits to be simulated.}

\item{n_reps}{A vector containing the number of complete replicates in each
environment. If only one value is provided,all environments will be assigned
the same value.}

\item{n_cols}{A vector containing the number of columns in each environment.
If only one value is provided, all environments will be assigned the same
value.}

\item{n_rows}{A vector containing the number of rows in each environment. If
only one value is provided, all environments will be assigned the same value.}

\item{plot_length}{A vector of plot lengths for each environment. If only
one value is provided, all environments will be assigned the same value.}

\item{plot_width}{A vector of plot widths for each environment. If only one
value is provided, all environments will be assigned the same value.}

\item{rep_dir}{Character string specifying the direction of replicate blocks.
One of either "column" (side-by-side, the default) or "row" (above-and-below).
Ignored when \code{n_reps = 1}.}

\item{var_R}{A vector of desired residual variances for each trait-by-environment
combination (ordered as environments within traits). If the length of
\code{var_R} corresponds to \code{n_traits}, the traits will be assigned the
same residual variance for each environment.}

\item{cor_R}{A matrix of residual correlations between more than one traits
with regards to the spatial model only. If not defined and
\code{n_traits > 1}, a diagonal matrix is assigned.}

\item{R_cor_R}{A matrix of residual correlations between more than one traits
with regards to the random error model only. If not defined and
\code{n_traits > 1}, a diagonal matrix is assigned.}

\item{spatial_model}{Character string specifying the model used to simulate
spatial variation. One of either "Bivariate" (bivariate interpolation, the
default) or "AR1:AR1" (two-dimensional autoregressive process of order one).}

\item{prop_spatial}{A vector containing the proportion of residual variance for
the spatial model compared to the total (spatial + random) error variance.
If only one value is provided, all environments will be assigned the same
value. By default, \code{prop_spatial = 0.5}.}

\item{complexity}{A single number indicating the complexity of the bivariate
interpolation model. By default, \code{complexity = 12}. Note that much
lower values might result in convergence problems. For more information on
the complexity parameter check \link[akima]{interp}.}

\item{col_cor}{A vector of column autocorrelations for each environment used in
the AR1:AR1 model. If only one value is provided, all environments will be
assigned the same value.}

\item{row_cor}{A vector of column autocorrelations for each environment used in
the AR1:AR1 model. If only one value is provided, all environments will be
assigned the same value.}

\item{effects}{When true, a list is returned with additional list entries for
each trait containing the simulated residuals corresponding to the spatial
model and random error within each environment.}
}
\value{
A data-frame containing environment number, block number, column number,
  row number and simulated residuals for each trait. When \code{effects = TRUE},
  a list is returned with additional list entries for each trait containing
  the simulated residuals corresponding to the spatial model and random error
  within each environment.
}
\description{
Creates a data frame of residuals for each plot in a simulated multi-environment
field trial testing one or multiple traits. Residuals are based on a spatial
component and a random component. The spatial component can be simulated
using bivariate interpolation based on akima's \link[akima]{interp} function
or based on a separable autoregressive process (AR1:AR1) withinmenvironments.
If multiple traits are simulated, a correlated residual betweenmtraits can be
simulated based assuming a correlation of the spatial residual between traits,
a correlation of the random residual between traits, or ancombination of both.
Between traits and environments, a separable covariance structure is assumed.
}
\examples{
# Simulation of residuals for two traits tested in three environments using bivariate
# interpolation to model spatial variation.

n_envs <- 3 # number of simulated environments.
n_traits <- 2 # number of simulated traits.

# Field layout
n_cols <- 10 # total number of columns in each environment.
n_rows <- c(20, 30, 20) # total number of rows in each environment.
plot_length <- 5 # plot length set to 5 meters.
plot_width <- 2 # plot width set to 2 meters.
n_reps <- c(2, 3, 2) # number of complete replicates (blocks) per environment.

# Residual variances for traits 1 and 2.
var_R <- c(0.4, 15)

# Residual correlations between traits 1 and 2, with regards to spatial model.
cor_R <- matrix(c(1.0, 0.2,
                  0.2, 1.0),
                  ncol = 2)

error_df <- field_trial_error(n_envs = n_envs,
                              n_traits = n_traits,
                              n_cols = n_cols,
                              n_rows = n_rows,
                              plot_length = plot_length,
                              plot_width = plot_width,
                              n_reps = n_reps,
                              rep_dir = "row",
                              var_R = var_R,
                              cor_R = cor_R,
                              spatial_model = "bivariate",
                              prop_spatial = 0.6,
                              complexity = 14,
                              effects = TRUE)

}
