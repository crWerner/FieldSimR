load("~/Documents/EIB/0FieldSimR/fieldsimr/data/error_df_bivar.rda")
load("~/Documents/EIB/0FieldSimR/fieldsimr/data/gv_df_unstr.rda")
library(devtools)
library(available)
library(styler)
styler::style_pkg() # see changes with git diff <file path>
error_df_bivar <- df_error_bivar
rm(df_error_bivar)
gv_df_unstr <- df_gv_unstr
rm(df_gv_unstr)
save(gv_df_unstr, file = "gv_df_unstr.rda")
save(error_df_bivar, file = "error_df_bivar.rda")
load("~/Documents/EIB/0FieldSimR/fieldsimr/data/error_df_bivar.rda")
load("~/Documents/EIB/0FieldSimR/fieldsimr/data/gv_df_unstr.rda")
head(error_df_bivar)
load("genetic_values_T1_paper.RData")
load("~/Documents/EIB/0FieldSimR/fieldsimr/data-raw/genetic_values_T1_paper.RData")
head(pheno_df_spat[, c(5, 6)])
head(df_gv_unstr)
colnames(gv_df_unstr)
gv_df_unstr
colnames(gv_df_unstr)[4:5] <- c("gv.Trait1", "gv.Trait2")
head(gv.Trait1)
head(gv_df_unstr)
head(error_df_bivar)
colnames(error_df_bivar)[5:6]
colnames(error_df_bivar)[5:6] <- c("e.Trait1", "e.Trait2")
head(pheno_df_spat)
error_df_bivar
setwd("~/Documents/EIB/0FieldSimR/fieldsimr/data")
save(error_df_bivar, file = "error_df_bivar.rda")
save(gv_df_unstr, file = "gv_df_unstr.rda")
setwd("~/Documents/EIB/0FieldSimR/fieldsimr")
source("~/Documents/EIB/0FieldSimR/fieldsimr/R/compound_symmetry_gxe.R")
source("~/Documents/EIB/0FieldSimR/fieldsimr/R/compound_symmetry_gxe.R")
source("~/Documents/EIB/0FieldSimR/fieldsimr/R/field_trial_error.R")
source("~/Documents/EIB/0FieldSimR/fieldsimr/R/make_phenotypes.R")
source("~/Documents/EIB/0FieldSimR/fieldsimr/R/plot_effects.R")
source("~/Documents/EIB/0FieldSimR/fieldsimr/R/unstructured_gxe.R")
?compsym_asr_output
library(FieldSimR)
?compsym_asr_output
install.packages("devtools")
library(devtools)
install_github("crWerner/fieldsimr")
install.packages("devtools")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(AlphaSimR)
library(FieldSimR)
library(ggplot2)
n_envs <- 3 # Number of environments.
n_traits <- 2 # Number of traits.
n_blocks <- c(2, 3, 2) # Number of blocks in the three environments, respectively.
block_dir <- "col" # Layout of blocks (“side-by-side”).
n_cols <- c(10, 15, 10) # Total umber of columns per location.
n_rows <- 20 # Total number of rows per location.
plot_length <- 8 # Plot length; here in meters (column direction).
plot_width <- 2 # Plot width; here in meters (row direction).
H2 <- c(0.3, 0.3, 0.3, 0.5, 0.5, 0.5) # c(Yld:E1, Yld:E2, Yld:E3, Pht:E1, Pht:E2, Pht:E3)
var <- c(0.085, 0.12, 0.06, 15.1, 8.5, 11.7) # c(Yld:E1, Yld:E2, Yld:E3, Pht:E1, Pht:E2, Pht:E3)
# Calculation of error variances based on the genetic variance and target heritability vectors.
calc_var_R <- function(var, H2) {
varR <- (var / H2) - var
return(varR)
}
var_R <- calc_var_R(var, H2)
var_R # Vector of error variances: c(Yld:E1, Yld:E2, Yld:E3, Pht:E1, Pht:E2, Pht:E3)
spatial_model <- "Bivariate" # Spatial error model.
prop_spatial <- 0.4 # Proportion of spatial to total error variance.
S_cor_R <- rand_cor_mat(n_traits, min_cor = 0, max_cor = 0.5, pos_def = TRUE)
S_cor_R
prop_ext <- 0.2
ext_dir <- "row"
ext_ord <- "zig-zag"
E_cor_R <- rand_cor_mat(n_traits, min_cor = 0, max_cor = 0.5, pos_def = TRUE)
E_cor_R
error_df <- field_trial_error(
n_envs = n_envs,
n_traits = n_traits,
n_blocks = n_blocks,
block_dir = block_dir,
n_cols = n_cols,
n_rows = n_rows,
plot_length = plot_length,
plot_width = plot_width,
var_R = var_R,
R_cor_R = NULL,
spatial_model = spatial_model,
prop_spatial = prop_spatial,
S_cor_R = S_cor_R,
prop_ext = prop_ext,
ext_dir = ext_dir,
ext_ord = ext_ord,
E_cor_R = E_cor_R,
return_effects = TRUE
)
source("~/Documents/EIB/0FieldSimR/fieldsimr/R/field_trial_error.R")
error_df <- field_trial_error(
n_envs = n_envs,
n_traits = n_traits,
n_blocks = n_blocks,
block_dir = block_dir,
n_cols = n_cols,
n_rows = n_rows,
plot_length = plot_length,
plot_width = plot_width,
var_R = var_R,
R_cor_R = NULL,
spatial_model = spatial_model,
prop_spatial = prop_spatial,
S_cor_R = S_cor_R,
prop_ext = prop_ext,
ext_dir = ext_dir,
ext_ord = ext_ord,
E_cor_R = E_cor_R,
return_effects = TRUE
)
fill_matrix
install.packages("FieldSimR")
library(AlphaSimR)
library(FieldSimR)
library(ggplot2)
error_df <- field_trial_error(
n_envs = n_envs,
n_traits = n_traits,
n_blocks = n_blocks,
block_dir = block_dir,
n_cols = n_cols,
n_rows = n_rows,
plot_length = plot_length,
plot_width = plot_width,
var_R = var_R,
R_cor_R = NULL,
spatial_model = spatial_model,
prop_spatial = prop_spatial,
S_cor_R = S_cor_R,
prop_ext = prop_ext,
ext_dir = ext_dir,
ext_ord = ext_ord,
E_cor_R = E_cor_R,
return_effects = TRUE
)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(AlphaSimR)
library(FieldSimR)
library(ggplot2)
n_envs <- 3 # Number of environments.
n_traits <- 2 # Number of traits.
n_blocks <- c(2, 3, 2) # Number of blocks in the three environments, respectively.
block_dir <- "col" # Layout of blocks (“side-by-side”).
n_cols <- c(10, 15, 10) # Total umber of columns per location.
n_rows <- 20 # Total number of rows per location.
plot_length <- 8 # Plot length; here in meters (column direction).
plot_width <- 2 # Plot width; here in meters (row direction).
H2 <- c(0.3, 0.3, 0.3, 0.5, 0.5, 0.5) # c(Yld:E1, Yld:E2, Yld:E3, Pht:E1, Pht:E2, Pht:E3)
var <- c(0.085, 0.12, 0.06, 15.1, 8.5, 11.7) # c(Yld:E1, Yld:E2, Yld:E3, Pht:E1, Pht:E2, Pht:E3)
# Calculation of error variances based on the genetic variance and target heritability vectors.
calc_var_R <- function(var, H2) {
varR <- (var / H2) - var
return(varR)
}
var_R <- calc_var_R(var, H2)
var_R # Vector of error variances: c(Yld:E1, Yld:E2, Yld:E3, Pht:E1, Pht:E2, Pht:E3)
spatial_model <- "Bivariate" # Spatial error model.
prop_spatial <- 0.4 # Proportion of spatial to total error variance.
S_cor_R <- rand_cor_mat(n_traits, min_cor = 0, max_cor = 0.5, pos_def = TRUE)
S_cor_R
prop_ext <- 0.2
ext_dir <- "row"
ext_ord <- "zig-zag"
E_cor_R <- rand_cor_mat(n_traits, min_cor = 0, max_cor = 0.5, pos_def = TRUE)
E_cor_R
error_df <- field_trial_error(
n_envs = n_envs,
n_traits = n_traits,
n_blocks = n_blocks,
block_dir = block_dir,
n_cols = n_cols,
n_rows = n_rows,
plot_length = plot_length,
plot_width = plot_width,
var_R = var_R,
R_cor_R = NULL,
spatial_model = spatial_model,
prop_spatial = prop_spatial,
S_cor_R = S_cor_R,
prop_ext = prop_ext,
ext_dir = ext_dir,
ext_ord = ext_ord,
E_cor_R = E_cor_R,
return_effects = TRUE
)
source("~/Documents/EIB/0FieldSimR/fieldsimr/R/field_trial_error.R")
head(error_df)
head(error_df$plot_df)
library(devtools)
install_github("crWerner/fieldsimr")
detach("package:FieldSimR", unload = TRUE)
library(FieldSimR)
error_df <- field_trial_error(
n_envs = n_envs,
n_traits = n_traits,
n_blocks = n_blocks,
block_dir = block_dir,
n_cols = n_cols,
n_rows = n_rows,
plot_length = plot_length,
plot_width = plot_width,
var_R = var_R,
R_cor_R = NULL,
spatial_model = spatial_model,
prop_spatial = prop_spatial,
S_cor_R = S_cor_R,
prop_ext = prop_ext,
ext_dir = ext_dir,
ext_ord = ext_ord,
E_cor_R = E_cor_R,
return_effects = TRUE
)
detach("package:FieldSimR", unload = TRUE)
library(FieldSimR)
detach("package:FieldSimR", unload = TRUE)
library(FieldSimR)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(AlphaSimR)
library(FieldSimR)
library(ggplot2)
n_envs <- 3 # Number of environments.
n_traits <- 2 # Number of traits.
n_blocks <- c(2, 3, 2) # Number of blocks in the three environments, respectively.
block_dir <- "col" # Layout of blocks (“side-by-side”).
n_cols <- c(10, 15, 10) # Total umber of columns per location.
n_rows <- 20 # Total number of rows per location.
plot_length <- 8 # Plot length; here in meters (column direction).
plot_width <- 2 # Plot width; here in meters (row direction).
H2 <- c(0.3, 0.3, 0.3, 0.5, 0.5, 0.5) # c(Yld:E1, Yld:E2, Yld:E3, Pht:E1, Pht:E2, Pht:E3)
var <- c(0.085, 0.12, 0.06, 15.1, 8.5, 11.7) # c(Yld:E1, Yld:E2, Yld:E3, Pht:E1, Pht:E2, Pht:E3)
# Calculation of error variances based on the genetic variance and target heritability vectors.
calc_var_R <- function(var, H2) {
varR <- (var / H2) - var
return(varR)
}
var_R <- calc_var_R(var, H2)
var_R # Vector of error variances: c(Yld:E1, Yld:E2, Yld:E3, Pht:E1, Pht:E2, Pht:E3)
spatial_model <- "Bivariate" # Spatial error model.
prop_spatial <- 0.4 # Proportion of spatial to total error variance.
S_cor_R <- rand_cor_mat(n_traits, min_cor = 0, max_cor = 0.5, pos_def = TRUE)
S_cor_R
prop_ext <- 0.2
ext_dir <- "row"
ext_ord <- "zig-zag"
E_cor_R <- rand_cor_mat(n_traits, min_cor = 0, max_cor = 0.5, pos_def = TRUE)
E_cor_R
error_df <- field_trial_error(
n_envs = n_envs,
n_traits = n_traits,
n_blocks = n_blocks,
block_dir = block_dir,
n_cols = n_cols,
n_rows = n_rows,
plot_length = plot_length,
plot_width = plot_width,
var_R = var_R,
R_cor_R = NULL,
spatial_model = spatial_model,
prop_spatial = prop_spatial,
S_cor_R = S_cor_R,
prop_ext = prop_ext,
ext_dir = ext_dir,
ext_ord = ext_ord,
E_cor_R = E_cor_R,
return_effects = TRUE
)
field_trial_error
error_env2 <- error_df$plot_df[error_df$plot_df$env == 2, ]
e_comp_env2 <- error_df$Trait1[error_df$Trait1$env == 2, ]
error_env2
e_comp_env2
remove.packages("FieldSimR")
error_df <- field_trial_error(
n_envs = n_envs,
n_traits = n_traits,
n_blocks = n_blocks,
block_dir = block_dir,
n_cols = n_cols,
n_rows = n_rows,
plot_length = plot_length,
plot_width = plot_width,
var_R = var_R,
R_cor_R = NULL,
spatial_model = spatial_model,
prop_spatial = prop_spatial,
S_cor_R = S_cor_R,
prop_ext = prop_ext,
ext_dir = ext_dir,
ext_ord = ext_ord,
E_cor_R = E_cor_R,
return_effects = TRUE
)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(AlphaSimR)
library(FieldSimR)
library(ggplot2)
n_envs <- 3 # Number of environments.
n_traits <- 2 # Number of traits.
n_blocks <- c(2, 3, 2) # Number of blocks in the three environments, respectively.
block_dir <- "col" # Layout of blocks (“side-by-side”).
n_cols <- c(10, 15, 10) # Total umber of columns per location.
n_rows <- 20 # Total number of rows per location.
plot_length <- 8 # Plot length; here in meters (column direction).
plot_width <- 2 # Plot width; here in meters (row direction).
H2 <- c(0.3, 0.3, 0.3, 0.5, 0.5, 0.5) # c(Yld:E1, Yld:E2, Yld:E3, Pht:E1, Pht:E2, Pht:E3)
var <- c(0.085, 0.12, 0.06, 15.1, 8.5, 11.7) # c(Yld:E1, Yld:E2, Yld:E3, Pht:E1, Pht:E2, Pht:E3)
# Calculation of error variances based on the genetic variance and target heritability vectors.
calc_var_R <- function(var, H2) {
varR <- (var / H2) - var
return(varR)
}
var_R <- calc_var_R(var, H2)
var_R # Vector of error variances: c(Yld:E1, Yld:E2, Yld:E3, Pht:E1, Pht:E2, Pht:E3)
spatial_model <- "Bivariate" # Spatial error model.
prop_spatial <- 0.4 # Proportion of spatial to total error variance.
S_cor_R <- rand_cor_mat(n_traits, min_cor = 0, max_cor = 0.5, pos_def = TRUE)
S_cor_R
prop_ext <- 0.2
ext_dir <- "row"
ext_ord <- "zig-zag"
E_cor_R <- rand_cor_mat(n_traits, min_cor = 0, max_cor = 0.5, pos_def = TRUE)
E_cor_R
field_trial_error
?error_df_bivar
error_df_bivar
require(FieldSimR)
?df_error_bivar
with(df_error_bivar, tapply(block, env, unique))
error_df_bivar
with(error_df_bivar, tapply(block, env, unique))
plot_effects(error_df_bivar)
plot_effects(error_df_bivar, effect = "e.Trait1")
plot_effects(error_df_bivar[error_df_bivar$env == 1,], effect = "e.Trait1")
plot_effects(error_df_bivar[error_df_bivar$env == 2,], effect = "e.Trait1")
plot_effects(error_df_bivar[error_df_bivar$env == 3,], effect = "e.Trait1")
head(error_df_bivar)
plot_effects(error_df_bivar[error_df_bivar$env == 1,], effect = "e.Trait1")
require(FieldSimR)
df_error
?df_error_bivar
data(df_error_bivar)
df_error_bivar
library(devtools)
install_github("crWerner/fieldsimr")
require(FieldSimR)
error_df_bivar
?error_df_bivar
require(FieldSimR)
error_df_bivar
with(error_df_bivar, tapply(block, env, unique))
load("~/Downloads/Example4Christian.RData")
head(pheno_df_spat)
pheno_df_spat$env
plot_effects(pheno_df_spat, effect = "e_spat")
plot_effects(pheno_df_spat, effect = "e_total")
plot_effects(error_df_bivar[error_df_bivar$env ==1 ], effect = "e.Trait1")
plot_effects(error_df_bivar[error_df_bivar$env ==1 ,], effect = "e.Trait1")
error_df_bivar$e.Trait1[error_df_bivar$env == 1]
plot(pheno_df_spat$e_total[pheno_df_spat], error_df_bivar$e.Trait1[error_df_bivar$env == 1])
pheno_df_spat$e_total[pheno_df_spat]
plot(pheno_df_spat$e_total, error_df_bivar$e.Trait1[error_df_bivar$env == 1])
pheno_df_spat$col
pheno_df_spat$row
